1. OAuth?("Open Authorization", "접근 위임을 위한 개방형 표준")
OAuth는 어플리케이션에 사용자가 비밀번호를 제공하지 않고 
다른 어플리케이션으로 로그인하여 
API를 통해 연동된 계정의 user 정보를 가져와 
해당 어플리케이션 사용자에게 보여줄 수 있다.

예를 들어, 외부 웹 어플리케이션(wetube)에서 비밀번호를 제공하지 않고 
github로 로그인하여 API를 통해 
연동된 계정의 github user 정보를 가져와 
사용자에게 보여줄 수 있습니다.

2. API?
API는 (정의 및 프로토콜 집합을 사용하여 )
두 소프트웨어 구성 요소가 서로 통신할 수 있게 하는 메커니즘입니다.

예를 들어, 기상청의 소프트웨어 시스템에는 일일 기상 데이터가 들어 있습니다. 
휴대폰의 날씨 앱은 API를 통해 이 시스템과 ‘대화’하여 
휴대폰에 매일 최신 날씨 정보를 표시합니다.

3. Access token?
엑세스 토큰이란 로그인 세션을 위한 보안 자격 증명과 같은 정보를 담고 있다.

4. Access token used for?
엑세스 토큰은 엑세스 토크 기반 인증 시스템에서 
어플리케이션이 API에 접근할 수 있게 허가해준다.


즉, 유저가 성공적으로 신원 인증을 받고 어플리케이션에 엑세스를 허가하면
어플리케이션은 엑세스 토큰을 받는다.
그리고 그 엑세스 토큰은 target API에 접근할때
보안 자격 증명으로써 전달된다.


4. Web application flow (로그인 과정)

1) Users are redirected to request their GitHub identity

유저가 어떠한 어플리케이션에서 다른 어플리케이션으로 로그인 하기 위해 그 어플리케이션으로 redirect된다.
그리고 그 어플리케이션에서 자신의 신원을 인증하고 이 어플리케이션에 대해 엑세스를 허가한다.

2) Users are redirected back to your site by GitHub

OAuth에 사용되는 어플리케이션이 유저에게 엑세스 토큰을 준다.
그리고 그 유저는 엑세스 토큰과 함께 callback address로 redirect된다.

3) Your app accesses the API with the user's access token.
넥세스 토큰을 이용하여 target API에 접근할 수 있고
API를 이용해 두 소프트웨어가 통신하여 
해당 어플리케이션이 OAuth를 허가한 어플리케이션으로부터 data를 가져온다.

5. 코드의 흐름

1)  a(href="/users/github/start") Continue with Github &rarr;
소셜 로그인하기

2) userRouter.get("/github/start", startGithubLogin);

3) startGithubLogin 컨트롤러

4) step 1
유저를 소셜 로그인에 이용되는 app으로 redirect시켜서
그 app에서 자신의 신원을 인증하고 
이 OAuth app가 소셜 로그인에서 정보를 가져올 수 있는 Access 권한을 user가 승인한다.

.... 한 번더...