1. webpack 이란?
모듈 번들러: 번들러란 여러 개의 자바스크립트 코드 파일들을(모듈들)
브라우저에서도 로드할 수 있는 단 하나의 코드 파일로 결합하는 것을 말한다.

필요성: 큰 코드베이스를 효과적은 관리하고 웹 어플리케이션 퍼포먼스를 개선시키기 위함이다.

=> 당장 wetube만 봐도 웹 사이트 구축하는데 파일의 수가 엄청나다. 
이 파일 하나하나 업로드 하는데 로딩 시간이 많이 소요된다.
그레서 아예 단일 파일로 만들어서 로딩시켜 로딩 시간을 줄이겠다는 목적이다.

=> 니코쌤: 브라우저가 이해할 수 없는 css, 최신 js 같은 것을
브라우저가 이해할 수 있도록 webpack으로 변환시킨다.

2. webpack 개념
웹팩은 하나의 시작점(entryPoint)으로부터 의존적인 모듈들을 전부 찾아내서 하나의 결과물을 만들어낸다.
그렇기 때문에 entry 속성은 웹팩에서 웹 자원을 변환하기 위해 필요한 최초의 진입점이자 자바스크립트 파일 경로이다.
mode, entry, output을 통해서 코드를 묶는다.

--mode : 웹팩의 실행모드를 의미, 
개발 또는 프로덕션과 같은 모드
디폴트는 프로덕션이기에 개발할때는 개발 모드로 설정하다.
프로적션보다 개발 모드일 때가 더 개발하기에 수월하다.
--entry : 모듈이 시작되는 부분, 시작점 경로를 지정
--output: 번들링된 파일들을 저장할 위치, 일반적으로 dist, build라는 이름의 폴더를 사용한다. 

3.module 프로퍼티: 모듈을 유형을 별로 처리할 방법을 결정

4.module.rules : "어떤 유형의 모듈은 어떤 로더를 사용하여 처리한다."를 결정하는 배열

5.module.rules.test : loader를 적용시킬 파일들을 정규식으로 명시

6.module.rules.loader : 사용할 loader 명시

7. Loader(로더) 
:로더는 모듈의 소스 코드에 변경 사항을 적용합니다.

로더(Loader)는 웹팩이 웹 애플리케이션을 해석할 때 
자바스크립트 파일이 아닌 웹 자원(HTML, CSS, Images, 폰트 등)들을 변환할 수 있도록 도와주는 속성입니다.
예를 들어 js 파일에 css 파일을 임포트하면 웹팩은 css 파일을 못 알아 먹는다.
이때 로더가 필요하다.

8. 바벨은 자바스크립트 컴파일러다.
브라우저는 최신 문법이나 타입스크립트가 같은 것들이 적용된 자바스크립트를 이해하지 못한다.
바벨은 이 최신 자바스크립트를 브라우저가 이해할 수 있는 자바스크립트로 변환하는 컴파일러 역할을 한다.