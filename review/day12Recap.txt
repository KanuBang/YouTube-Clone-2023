1, 절대경로와 상대경로
/edit => /edit
edit => users/edit

2. 폴더로 파일을 분류 할 시에는 파일 경로에 주의하자

3. password 변경 페이지는 socialLogi 사용자가 볼 수 없어야 한다.

________________________________________________________________________
먼저 ES6 문법을 이용하여 form data인 예전 비밀번호, 변경 비밀번호, 변경 비밀번호 확인을 받았다.
req.body로 from data를 backend에서 받기에 from의 input에 name이 필요하고
그 name은 backend에서 동일하게 사용되어야만 form data를 받을 수 있다.
그리고 마찬가지로 _id도 req.session.user로 받았다.

그 다음 _id를 이용해 몽고DB에서 user를 찾았다. => const user = await User.findById(_id)
bcrypt를 이용하여 예전 비밀번호와 몽고 DB에 있는 비밀번호가 일치하는 비교하였다.
=> const ok = bcrypt.compare(oldPassword, user.password)
bcrypt을 이용하기에 해쉬값을 비교하는 것이다.

그 다음 비밀번호를 바꿀 수 없을 때를 if문으로 분류했다.
if문에 해당이 되는 상황이면 비밀번호를 바꿀 수 없기에
곧 받로 현재 컨트롤러를 종료시키고 에러메시지와 함께 현재 페이지를 render 했다.

첫 번째로는 예전 비밀번호와 지금 몽고 DB의 비밀번호가 일치 않았을 때이다.
비밀번호를 바꾸는 사람이 다른 사람이 아님을 확인하기 위하여 넣었다.
두 번째로는 새로운 비밀번호를 잘못 입력하는 것을 방지하기 위함이다.

마지막 코드는 비밀번호 변경 시 발생 될 문제가 없기에 실행되는 코드이다.
여기서 실제로 비밀번호를 업데이트하고 몽고 DB에다가 업데이트된 버전을 저장한다.

그리고 마무리로 logout한다.

로그아웃으로 redirect 하면 logout 컨트롤러에서 세션이 destroy 된다.
세션이 삭제된다는 말이다.
그래서 세션 업데이트가 필요 없다.
왜냐하면, 어차피 지금 세션은 사라지고 나중에 로그인 할 때 
postLogin 컨트롤러에서 비밀번호가 업데이트된 몽고 DB의 데이터로 세션이 생성되기 때문이다.



