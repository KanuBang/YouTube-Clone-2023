abc
gdrffg@gmail.com
chan
qwer1234
seoul

1.$or => 배열에서 or 연산을 실행한다.

The $or operator performs a logical OR operation 
on an array of one or more <expressions> and selects the documents 
that satisfy at least one of the <expressions>. 
The $or has the following syntax:
{ $or: [ { <expression1> }, { <expression2> }, ... , { <expressionN> } ] }

2. 작업 내용
패스워드 확인, 이메일 or 유저네임 존재 여부를 몽고 DB에서 체크한다.
만약 패스워드 확인이 일치하지 않거나 이메일 or 유저네임이 존재하는 에러와 같은 것은
if로 처리했고 에러 발생시 에럼 메지와 함께 return으로 컨트롤러를 종료시켰다.

즉,
1. if문으로 먼저 에러 처리
2. 에러 발생시 에러 설명과 함께 return 하여 함수를 종료
3. if문에 안 걸린 코드는 문제 없는 코드

______________________________________________________________________________________

1. 응답할때 상태코드를 써여 하는 이유
응답할때 상태코드를 써야만 브라우저가 적절한 반응을 할 수 있다.
브라우저가 적절한 반응을 해야만 유저가 편해질 것이다.

예를 들어,
우리가 로그인 할때 브라우저는 자동으로 아이디, pwd를 저장할까요? 라는 반응을 보여준다.
근데 만약 비밀번호 잘못 입력했을때도 브라우저가 이러한 반응을 보이면 유저 입장에서는 난처하다.
그래서 상태코드 400 추가로 보내 뭔가 에러가 발생했음을 브라우저에게 알리고
브라우저가 자동으로 하는 동작(id, pwd 저장)을 유저에게 하지 못하게 한다.

상태코드 4백대는 실패
상캐코드 3백대는 성공을 의미한다.

______________________________________________________________________________________

1. 작업 내용

1) 로그인을 만들었다.

먼저 로그인 라우터에 get, post를 처리하는 컨트롤러를 만들었고
getLogin 컨트롤러는 login.pug를 단순히 렌더링한ㄴ 역할이다.
postLogin 컨트롤러는 유저네임과 패스워드를 받아서 실제로 로그인 하는 역할이다.
(물론, 지금 상태에서는 아직 다 구현하지 못 했다.)

2) login.pug / join.pug
계정이 있다면 로그인 창으로 넘어 갈 수 있도록
계정이 없다면 가입 창으로 넘어 갈 수 있도록 
pug 파일에 a 태그를 넣었다.

______________________________________________________________________________________

1.  Model.findOne(검색조건) vs  Model.findById(id)
검색조건과 일치하는 객체를 리턴한다.
vs
id와 일치하는 객체를 리턴한다.

2. 작업 내용
id가 존재하는지 안 하는지 체크했고
유저가 입력한 pwd와 db에 있는 pwd가 일치하는지 해쉬로 비교했다.

각각의 if문은 id가 존재하지 않을때 비밀번호가 일치않을때 처리하는 제어문이고
이때는 명배한 에러이기에 return으로 함수를 종료시키고 브라우저에게 상태코드와 함께 응답한다.

if문 다음 맨 마지막 코드는 정상인 코드, 즉, 로그인에 성공했을 때 코드이다.

______________________________________________________________________________________

1.  const ok = await bcrypt.compare(password, user.password)

bcrypt.compare(비교해볼 문자열, 해시값, 콜백메소드)

password = 유저가 입력한 비교해 볼 문자열
user.password = DB에 저장된 pwd 해시값

